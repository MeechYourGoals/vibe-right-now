
import { VertexAIService } from './VertexAIService'; // Import VertexAIService

/**
 * Service to interact with search APIs and AI-assisted search.
 * This service now proxies search functionality to VertexAIService.
 */
export const PerplexityService = {
  /**
   * Search using VertexAI's search-enabled generation.
   * @param query The search query
   * @returns The search results as text, generated by VertexAI.
   */
  async searchPerplexity(query: string): Promise<string> {
    try {
      console.log(`PerplexityService.searchPerplexity redirecting to VertexAIService.searchWithVertex for query: ${query.substring(0,50)}...`);
      return await VertexAIService.searchWithVertex(query);
    } catch (error) {
      console.error('Error in PerplexityService.searchPerplexity (proxied to VertexAI):', error);
      // Re-throw the error to be handled by the caller, consistent with original behavior
      // or return a generic error string if preferred to match a specific contract.
      // VertexAIService.searchWithVertex already returns a user-friendly string on error.
      throw error;
    }
  }
};

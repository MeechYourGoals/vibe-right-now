
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isVenuePartner() {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'venue_partner';
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') && 
             request.resource.size < 5 * 1024 * 1024; // 5MB max
    }
    
    function isValidVideo() {
      return request.resource.contentType.matches('video/.*') && 
             request.resource.size < 50 * 1024 * 1024; // 50MB max
    }
    
    // Public assets (logos, icons, etc.)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User profile images
    match /users/{userId}/profile/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin()) && isValidImage();
    }
    
    // User uploaded content
    match /users/{userId}/uploads/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin()) && 
                    (isValidImage() || isValidVideo());
    }
    
    // Venue images
    match /venues/{venueId}/images/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated() && (
        isAdmin() || 
        (isVenuePartner() && 
         firestore.get(/databases/(default)/documents/locations/$(venueId)).data.ownerId == request.auth.uid)
      ) && isValidImage();
    }
    
    // Event images and files
    match /events/{eventId}/images/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated() && (
        isAdmin() || 
        (isVenuePartner() && 
         firestore.get(/databases/(default)/documents/events/$(eventId)).data.ownerId == request.auth.uid)
      ) && isValidImage();
    }
    
    // Default deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
